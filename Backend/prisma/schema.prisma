// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  balance   Int      @default(0)
  isAdmin   Boolean  @default(false)
  films     FilmUser[]
  wishlists  Wishlist[]
}

model Film {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  director    String
  releaseYear Int
  genre       FilmGenre[]
  price       Float
  duration    Int
  coverImage  String?
  video       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users     FilmUser[]
  wishlists  Wishlist[]
}

model Genre {
  id      Int         @id @default(autoincrement())
  name    String      @unique
  films   FilmGenre[]
}

model FilmGenre {
  filmId  Int
  genreId Int
  film    Film  @relation(fields: [filmId], references: [id])
  genre   Genre @relation(fields: [genreId], references: [id])

  @@unique([filmId, genreId])
}

model FilmUser {
  userId Int
  filmId Int
  user   User  @relation(fields: [userId], references: [id])
  film   Film  @relation(fields: [filmId], references: [id])

  @@unique([userId, filmId])
}

model Wishlist {
  userId Int
  filmId Int
  user   User  @relation(fields: [userId], references: [id])
  film   Film  @relation(fields: [filmId], references: [id])

  @@unique([userId, filmId])
}